class Solution {
    
    public void helper(char[] s, int left, int right) {
        // base case
        if (left >= right) {
            return;
        }
        
        // swamp
        char temp = s[left];
        s[left] = s[right];
        s[right] = temp;
        
        // recursion
        helper(s, left + 1, right - 1);
    }
    
    
    public String reverseStr(String s, int k) {
        char[] a = s.toCharArray();
        
        if (a.length == 1) return s;
        
        // how many 2k group
        int n = a.length;
        int left;
        int right;
        
        for (int i = 0 ; i < n ; i += 2 * k) {
            left = i;
            right = Math.min(left + k - 1, n - 1);
            helper(a, left, right); // reverse fisrt k number    
        }
        
    
        return new String(a);
    }
}
// time O(n) spaceO(n)
